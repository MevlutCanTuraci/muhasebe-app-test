USE [master]
GO
/****** Object:  Database [HAN2009]    Script Date: 05/06/2010 16:59:19 ******/
CREATE DATABASE [HAN2009] ON  PRIMARY 
( NAME = N'HAN', FILENAME = N'D:\YedekDatabase\HAN.mdf' , SIZE = 2048KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'HAN_log', FILENAME = N'D:\YedekDatabase\HAN_log.ldf' , SIZE = 1024KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
 COLLATE SQL_Latin1_General_CP1_CI_AS
GO
EXEC dbo.sp_dbcmptlevel @dbname=N'HAN2009', @new_cmptlevel=90
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [HAN2009].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [HAN2009] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [HAN2009] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [HAN2009] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [HAN2009] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [HAN2009] SET ARITHABORT OFF 
GO
ALTER DATABASE [HAN2009] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [HAN2009] SET AUTO_CREATE_STATISTICS ON 
GO
ALTER DATABASE [HAN2009] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [HAN2009] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [HAN2009] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [HAN2009] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [HAN2009] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [HAN2009] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [HAN2009] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [HAN2009] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [HAN2009] SET  DISABLE_BROKER 
GO
ALTER DATABASE [HAN2009] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [HAN2009] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [HAN2009] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [HAN2009] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [HAN2009] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [HAN2009] SET  READ_WRITE 
GO
ALTER DATABASE [HAN2009] SET RECOVERY FULL 
GO
ALTER DATABASE [HAN2009] SET  MULTI_USER 
GO
ALTER DATABASE [HAN2009] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [HAN2009] SET DB_CHAINING OFF 
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spStokMiktar]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'

CREATE procedure [dbo].[spStokMiktar]
@StokKodu nvarchar(35)
as begin
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
select stokMiktar=
sum(
(case when sh.GCKod=''G'' then sh.GCMik else 0 end)-
(case when sh.GCKod=''C'' then sh.GCMik else 0 end)
)
from StokHareket sh
where sh.STOK_KODU=@StokKodu
    
END' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FatIrsUst]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[FatIrsUst](
	[SUBE_KODU] [int] NOT NULL,
	[INCKEYNO] [int] IDENTITY(1,1) NOT NULL,
	[FTIRSIP] [smallint] NOT NULL,
	[FATIRSNO] [varchar](15) NOT NULL,
	[CARI_KODU] [varchar](15) NULL,
	[TARIH] [datetime] NOT NULL,
	[FAT_TIPI] [smallint] NOT NULL,
	[KDV_DAHILMI] [bit] NULL,
	[KdvTutar] [float] NULL,
	[BrutTutar] [float] NULL,
	[GenelToplam] [float] NULL,
	[SatirIsk] [float] NULL,
	[KasaKodu] [varchar](8) NULL,
	[Irsaliyeli] [bit] NOT NULL,
	[IrsaliyeNo] [varchar](15) NULL,
	[SevkTarihi] [datetime] NULL,
	[Kapatilmis] [char](1) NULL,
 CONSTRAINT [PK_TBLFATIRSUST] PRIMARY KEY CLUSTERED 
(
	[INCKEYNO] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Sube]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Sube](
	[SUBE_KODU] [int] NOT NULL,
	[SUBE_ISMI] [varchar](30) NULL,
	[ADRES] [varchar](50) NULL,
	[VERGI_DAIRESI] [nvarchar](50) NULL,
	[VERGI_NO] [varchar](30) NULL,
	[MERKEZMI] [bit] NULL,
	[AKTIF] [bit] NULL,
 CONSTRAINT [PK_TBLSUBELER] PRIMARY KEY CLUSTERED 
(
	[SUBE_KODU] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Kur]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Kur](
	[BIRIM] [int] NOT NULL,
	[ISIM] [varchar](30) NULL,
 CONSTRAINT [PK_TBLKUR] PRIMARY KEY CLUSTERED 
(
	[BIRIM] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Stok]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Stok](
	[SUBE_KODU] [int] NOT NULL,
	[STOK_KODU] [varchar](35) NOT NULL,
	[STOK_ADI] [nvarchar](100) NULL,
	[KDV_ORANI] [float] NULL,
	[GRUP_KODU] [varchar](30) NULL,
	[KOD1] [varchar](30) NULL,
	[KOD2] [varchar](30) NULL,
	[KOD3] [varchar](30) NULL,
	[KOD4] [varchar](30) NULL,
	[AZAMI_MIKTAR] [int] NULL,
	[ASGARI_MIKTAR] [int] NULL,
	[BARKOD1] [varchar](35) NULL,
	[BARKOD2] [varchar](35) NULL,
	[BARKOD3] [varchar](35) NULL,
	[SATISFIYAT] [float] NULL,
	[ALISFIYAT] [float] NULL,
	[SATISDOVIZTIPI] [int] NULL,
	[ALISDOVIZTIPI] [int] NULL,
	[BIRIM] [char](15) NULL,
 CONSTRAINT [PK_TBLSTOK] PRIMARY KEY CLUSTERED 
(
	[STOK_KODU] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[KasaHareket]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[KasaHareket](
	[INCKEYNO] [int] IDENTITY(1,1) NOT NULL,
	[KASA_KOD] [varchar](8) NOT NULL,
	[GELIR_GIDER] [char](1) NOT NULL,
	[TIP] [char](1) NULL,
	[FISNO] [varchar](15) NULL,
	[KUL_NO] [int] NULL,
	[KDV_ORANI] [float] NULL,
	[KDV_TUTAR] [float] NULL,
	[Tutar] [float] NOT NULL,
	[Aciklama] [varchar](100) NULL,
	[Tarih] [datetime] NULL,
 CONSTRAINT [PK_KASAHAREKET] PRIMARY KEY CLUSTERED 
(
	[INCKEYNO] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StokHareket]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[StokHareket](
	[INCKEYNO] [int] IDENTITY(1,1) NOT NULL,
	[STOK_KODU] [varchar](35) NOT NULL,
	[GCMIK] [float] NOT NULL,
	[GCKOD] [char](1) NOT NULL,
	[TARIH] [datetime] NOT NULL,
	[BIRIM_FIYAT] [float] NULL,
	[FisNo] [varchar](15) NULL,
	[KDV] [float] NULL,
	[HTUR] [char](1) NOT NULL,
	[SATISK1] [float] NULL,
	[SATISK2] [float] NULL,
	[SATISK3] [float] NULL,
	[SATISK4] [float] NULL,
	[SATISK5] [float] NULL,
	[FTIRSIP] [smallint] NOT NULL,
 CONSTRAINT [PK_TBLSTHAR] PRIMARY KEY CLUSTERED 
(
	[INCKEYNO] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Kasa]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Kasa](
	[KASA_KOD] [varchar](8) NOT NULL,
	[SUBE_KODU] [int] NOT NULL,
	[KASA_ISMI] [nvarchar](50) NULL,
	[SONDEVIR_TARIH] [datetime] NULL,
	[SONDEVIR_TUTAR] [float] NULL,
	[KAYIT_TARIH] [smalldatetime] NULL,
	[DovizTipi] [smallint] NULL,
 CONSTRAINT [PK_KASA] PRIMARY KEY CLUSTERED 
(
	[KASA_KOD] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Kullanici]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Kullanici](
	[SUBE_KODU] [int] NOT NULL,
	[USER_NO] [int] IDENTITY(1,1) NOT NULL,
	[USER_NAME] [varchar](30) NULL,
	[PASSWORD] [varchar](50) NULL,
	[ADMINMI] [bit] NULL,
 CONSTRAINT [PK_TBLUSER] PRIMARY KEY CLUSTERED 
(
	[USER_NO] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StokKod3]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[StokKod3](
	[SUBE_KODU] [int] NOT NULL,
	[GRUP_KOD] [varchar](30) NOT NULL,
	[GRUP_ISIM] [varchar](30) NULL,
 CONSTRAINT [PK_TBLSTOKKOD3] PRIMARY KEY CLUSTERED 
(
	[GRUP_KOD] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FaturaNo]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[FaturaNo](
	[SUBE_KODU] [int] NOT NULL,
	[TIP] [char](3) NOT NULL,
	[NUMARA] [varchar](15) NOT NULL,
	[INCKEYNO] [int] IDENTITY(1,1) NOT NULL,
 CONSTRAINT [PK_TBLFATNO] PRIMARY KEY CLUSTERED 
(
	[INCKEYNO] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StokKod4]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[StokKod4](
	[SUBE_KODU] [int] NOT NULL,
	[GRUP_KOD] [varchar](30) NOT NULL,
	[GRUP_ISIM] [varchar](30) NULL,
 CONSTRAINT [PK_TBLSTOKKOD4] PRIMARY KEY CLUSTERED 
(
	[GRUP_KOD] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Cari]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Cari](
	[SUBE_KODU] [int] NOT NULL,
	[CARI_KODU] [varchar](15) NOT NULL,
	[CariTip] [char](3) NOT NULL,
	[CARI_ISIM] [varchar](50) NULL,
	[CARI_TEL] [varchar](15) NULL,
	[CARI_ADRES] [varchar](100) NULL,
	[CARI_EMAIL] [varchar](50) NULL,
	[VergiDairesi] [varchar](50) NULL,
	[VergiNumarasi] [varchar](15) NULL,
	[Fax] [varchar](20) NULL,
	[WebAdresi] [varchar](60) NULL,
 CONSTRAINT [PK_TBLCARI] PRIMARY KEY CLUSTERED 
(
	[CARI_KODU] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StokGrup]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[StokGrup](
	[SUBE_KODU] [int] NOT NULL,
	[GRUP_KOD] [varchar](30) NOT NULL,
	[GRUP_ISIM] [varchar](30) NULL,
 CONSTRAINT [PK_TBLSTOKGRUP] PRIMARY KEY CLUSTERED 
(
	[GRUP_KOD] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StokKod1]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[StokKod1](
	[SUBE_KODU] [int] NOT NULL,
	[GRUP_KOD] [varchar](30) NOT NULL,
	[GRUP_ISIM] [varchar](30) NULL,
 CONSTRAINT [PK_TBLSTOKKOD1] PRIMARY KEY CLUSTERED 
(
	[GRUP_KOD] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StokKod2]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[StokKod2](
	[SUBE_KODU] [int] NOT NULL,
	[GRUP_KOD] [varchar](30) NOT NULL,
	[GRUP_ISIM] [varchar](30) NULL,
 CONSTRAINT [PK_TBLSTOKKOD2] PRIMARY KEY CLUSTERED 
(
	[GRUP_KOD] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CariHareket]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[CariHareket](
	[CariHarId] [int] IDENTITY(1,1) NOT NULL,
	[CariKodu] [varchar](15) NOT NULL,
	[FisNo] [varchar](15) NOT NULL,
	[Borc] [float] NOT NULL,
	[Alacak] [float] NOT NULL,
	[Tarih] [datetime] NOT NULL,
	[HareketTuru] [char](1) NULL,
 CONSTRAINT [PK_CariHareket] PRIMARY KEY CLUSTERED 
(
	[CariHarId] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[tmpStokHareketDokumu]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[tmpStokHareketDokumu]
AS
SELECT     dbo.StokHareket.STOK_KODU AS StokKodu, dbo.StokHareket.FisNo, dbo.StokHareket.HTUR AS Tip, dbo.StokHareket.GCKOD AS GCKod, 
                      dbo.StokHareket.GCMIK AS GCMiktar, dbo.StokHareket.BIRIM_FIYAT AS BirimFiyat, dbo.StokHareket.TARIH
FROM         dbo.StokHareket INNER JOIN
                      dbo.Stok ON dbo.StokHareket.STOK_KODU = dbo.Stok.STOK_KODU
' 
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "StokHareket"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 225
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 2
         End
         Begin Table = "Stok"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 389
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'VIEW', @level1name=N'tmpStokHareketDokumu'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'VIEW', @level1name=N'tmpStokHareketDokumu'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[tmpKasaHar]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[tmpKasaHar]
AS
SELECT     dbo.KasaHareket.KASA_KOD AS KasaKod, dbo.KasaHareket.GELIR_GIDER AS [Gelir/Gider], dbo.KasaHareket.FISNO AS FisNo, 
                      dbo.KasaHareket.Tutar
FROM         dbo.KasaHareket INNER JOIN
                      dbo.Kasa ON dbo.KasaHareket.KASA_KOD = dbo.Kasa.KASA_KOD
' 
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "KasaHareket"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 204
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Kasa"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 181
               Right = 397
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'VIEW', @level1name=N'tmpKasaHar'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'VIEW', @level1name=N'tmpKasaHar'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[tmpView]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[tmpView]
AS
SELECT     dbo.Cari.CARI_KODU AS CariKod, dbo.Cari.CARI_ISIM AS CariIsim, dbo.CariHareket.FisNo, dbo.CariHareket.Tarih, dbo.CariHareket.Borc, 
                      dbo.CariHareket.Alacak
FROM         dbo.CariHareket INNER JOIN
                      dbo.Cari ON dbo.CariHareket.CariKodu = dbo.Cari.CARI_KODU
' 
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CariHareket"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 2
         End
         Begin Table = "Cari"
            Begin Extent = 
               Top = 6
               Left = 227
               Bottom = 114
               Right = 378
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'VIEW', @level1name=N'tmpView'

GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'VIEW', @level1name=N'tmpView'

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spCariGenelBorcAlacak]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE procedure [dbo].[spCariGenelBorcAlacak]
@startDate datetime,
@finishDate datetime,
@subeKodu int
as begin
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    
SELECT     cari.CARI_KODU CariKod,cari.CARI_ISIM CariIsim,cari.CARI_TEL Telefon,
Borc=sum(ch.Borc) ,Alacak=sum(ch.Alacak),
BorcBak=(case when (sum(ch.Borc)-sum(ch.Alacak))>0 then sum(ch.Borc)-sum(ch.Alacak) else 0 end ),
AlacakBak=(case when (sum(ch.Alacak)-sum(ch.Borc))>0 then sum(ch.Alacak)-sum(ch.Borc) else 0 end )

FROM         dbo.Cari cari INNER JOIN
                      dbo.CariHareket ch ON cari.CARI_KODU =ch.CariKodu
where cari.SUBE_KODU=@subeKodu and  ch.Tarih BETWEEN @startDate and @finishDate
group by cari.CARI_KODU,cari.CariTip,cari.CARI_ISIM,cari.CARI_TEL

END
' 
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOK_TBLKUR]') AND parent_object_id = OBJECT_ID(N'[dbo].[Stok]'))
ALTER TABLE [dbo].[Stok]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOK_TBLKUR] FOREIGN KEY([SATISDOVIZTIPI])
REFERENCES [dbo].[Kur] ([BIRIM])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOK_TBLKUR1]') AND parent_object_id = OBJECT_ID(N'[dbo].[Stok]'))
ALTER TABLE [dbo].[Stok]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOK_TBLKUR1] FOREIGN KEY([ALISDOVIZTIPI])
REFERENCES [dbo].[Kur] ([BIRIM])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOK_TBLSTOKGRUP]') AND parent_object_id = OBJECT_ID(N'[dbo].[Stok]'))
ALTER TABLE [dbo].[Stok]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOK_TBLSTOKGRUP] FOREIGN KEY([GRUP_KODU])
REFERENCES [dbo].[StokGrup] ([GRUP_KOD])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOK_TBLSTOKKOD1]') AND parent_object_id = OBJECT_ID(N'[dbo].[Stok]'))
ALTER TABLE [dbo].[Stok]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOK_TBLSTOKKOD1] FOREIGN KEY([KOD1])
REFERENCES [dbo].[StokKod1] ([GRUP_KOD])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOK_TBLSTOKKOD2]') AND parent_object_id = OBJECT_ID(N'[dbo].[Stok]'))
ALTER TABLE [dbo].[Stok]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOK_TBLSTOKKOD2] FOREIGN KEY([KOD2])
REFERENCES [dbo].[StokKod2] ([GRUP_KOD])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOK_TBLSTOKKOD3]') AND parent_object_id = OBJECT_ID(N'[dbo].[Stok]'))
ALTER TABLE [dbo].[Stok]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOK_TBLSTOKKOD3] FOREIGN KEY([KOD3])
REFERENCES [dbo].[StokKod3] ([GRUP_KOD])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOK_TBLSTOKKOD4]') AND parent_object_id = OBJECT_ID(N'[dbo].[Stok]'))
ALTER TABLE [dbo].[Stok]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOK_TBLSTOKKOD4] FOREIGN KEY([KOD4])
REFERENCES [dbo].[StokKod4] ([GRUP_KOD])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOK_TBLSUBELER]') AND parent_object_id = OBJECT_ID(N'[dbo].[Stok]'))
ALTER TABLE [dbo].[Stok]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOK_TBLSUBELER] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_KASAHAREKET_KASA]') AND parent_object_id = OBJECT_ID(N'[dbo].[KasaHareket]'))
ALTER TABLE [dbo].[KasaHareket]  WITH CHECK ADD  CONSTRAINT [FK_KASAHAREKET_KASA] FOREIGN KEY([KASA_KOD])
REFERENCES [dbo].[Kasa] ([KASA_KOD])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTHAR_TBLSTOK]') AND parent_object_id = OBJECT_ID(N'[dbo].[StokHareket]'))
ALTER TABLE [dbo].[StokHareket]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTHAR_TBLSTOK] FOREIGN KEY([STOK_KODU])
REFERENCES [dbo].[Stok] ([STOK_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_KASA_Sube]') AND parent_object_id = OBJECT_ID(N'[dbo].[Kasa]'))
ALTER TABLE [dbo].[Kasa]  WITH CHECK ADD  CONSTRAINT [FK_KASA_Sube] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLUSER_TBLSUBELER]') AND parent_object_id = OBJECT_ID(N'[dbo].[Kullanici]'))
ALTER TABLE [dbo].[Kullanici]  WITH NOCHECK ADD  CONSTRAINT [FK_TBLUSER_TBLSUBELER] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
ALTER TABLE [dbo].[Kullanici] CHECK CONSTRAINT [FK_TBLUSER_TBLSUBELER]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOKKOD3_TBLSUBELER]') AND parent_object_id = OBJECT_ID(N'[dbo].[StokKod3]'))
ALTER TABLE [dbo].[StokKod3]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOKKOD3_TBLSUBELER] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLFATNO_TBLSUBELER]') AND parent_object_id = OBJECT_ID(N'[dbo].[FaturaNo]'))
ALTER TABLE [dbo].[FaturaNo]  WITH CHECK ADD  CONSTRAINT [FK_TBLFATNO_TBLSUBELER] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOKKOD4_TBLSUBELER]') AND parent_object_id = OBJECT_ID(N'[dbo].[StokKod4]'))
ALTER TABLE [dbo].[StokKod4]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOKKOD4_TBLSUBELER] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLCARI_TBLSUBELER]') AND parent_object_id = OBJECT_ID(N'[dbo].[Cari]'))
ALTER TABLE [dbo].[Cari]  WITH CHECK ADD  CONSTRAINT [FK_TBLCARI_TBLSUBELER] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOKGRUP_TBLSUBELER]') AND parent_object_id = OBJECT_ID(N'[dbo].[StokGrup]'))
ALTER TABLE [dbo].[StokGrup]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOKGRUP_TBLSUBELER] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOKKOD1_TBLSUBELER]') AND parent_object_id = OBJECT_ID(N'[dbo].[StokKod1]'))
ALTER TABLE [dbo].[StokKod1]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOKKOD1_TBLSUBELER] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_TBLSTOKKOD2_TBLSUBELER]') AND parent_object_id = OBJECT_ID(N'[dbo].[StokKod2]'))
ALTER TABLE [dbo].[StokKod2]  WITH CHECK ADD  CONSTRAINT [FK_TBLSTOKKOD2_TBLSUBELER] FOREIGN KEY([SUBE_KODU])
REFERENCES [dbo].[Sube] ([SUBE_KODU])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CariHareket_Cari]') AND parent_object_id = OBJECT_ID(N'[dbo].[CariHareket]'))
ALTER TABLE [dbo].[CariHareket]  WITH CHECK ADD  CONSTRAINT [FK_CariHareket_Cari] FOREIGN KEY([CariKodu])
REFERENCES [dbo].[Cari] ([CARI_KODU])
